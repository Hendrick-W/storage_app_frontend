[{"/home/nero555/Codes/Laravel/storage_app_frontend/src/index.js":"1","/home/nero555/Codes/Laravel/storage_app_frontend/src/App.js":"2","/home/nero555/Codes/Laravel/storage_app_frontend/src/reportWebVitals.js":"3","/home/nero555/Codes/Laravel/storage_app_frontend/src/routes/router.js":"4","/home/nero555/Codes/Laravel/storage_app_frontend/src/pages/home.jsx":"5","/home/nero555/Codes/Laravel/storage_app_frontend/src/Component/home.jsx":"6","/home/nero555/Codes/Laravel/storage_app_frontend/src/Component/Header.jsx":"7"},{"size":500,"mtime":1617164588176,"results":"8","hashOfConfig":"9"},{"size":379,"mtime":1617164588176,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1617164588176,"results":"11","hashOfConfig":"9"},{"size":428,"mtime":1617164588176,"results":"12","hashOfConfig":"9"},{"size":223,"mtime":1617164588176,"results":"13","hashOfConfig":"9"},{"size":5960,"mtime":1617164588176,"results":"14","hashOfConfig":"9"},{"size":4325,"mtime":1617178890573,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ojjzue",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"/home/nero555/Codes/Laravel/storage_app_frontend/src/index.js",[],"/home/nero555/Codes/Laravel/storage_app_frontend/src/App.js",[],"/home/nero555/Codes/Laravel/storage_app_frontend/src/reportWebVitals.js",[],"/home/nero555/Codes/Laravel/storage_app_frontend/src/routes/router.js",["33"],"import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n} from \"react-router-dom\";\nimport Home from \"../pages/home\";\n\nexport const Routes = () => {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/\" exact>\n                    <Home />\n                </Route>\n                \n            </Switch>\n        </Router>\n    );\n};\n\nexport default Routes;","/home/nero555/Codes/Laravel/storage_app_frontend/src/pages/home.jsx",[],"/home/nero555/Codes/Laravel/storage_app_frontend/src/Component/home.jsx",["34","35","36","37","38","39","40","41","42"],"import React, { useState, useRef, useEffect } from \"react\";\nimport { Button, Form, InputGroup } from \"react-bootstrap\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\n// import { loginAction } from \"../store/actions/auth\";\nimport { connect } from \"react-redux\";\nimport lockIcon from \"./asset/lock.svg\";\nimport mailIcon from \"./asset/mail.svg\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport lottie from 'lottie-web';\nimport \"./home.scss\";\n\nconst FormSignIn = (props) => {\n  const { register, handleSubmit, errors } = useForm();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [showPassword, setShowPassword] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const eye = <FontAwesomeIcon icon={faEye} />;\n  const token = localStorage.getItem(\"token\");\n  let role = localStorage.getItem(\"role\");\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(showPassword ? false : true);\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    console.log('hello')\n    const data = {\n      nomor_pegawai: email,\n      password: password,\n    };\n    if (!email) {\n      alert(\"Email is Required\");\n    } else if (!password) {\n      alert(\"Password is Required\");\n    } else {\n      axios\n        .post(\"https://wareapplaravel.herokuapp.com/api/login\", data)\n        .then((res) => {\n          console.log(res);\n          // localStorage.setItem(\"token\", res.data.result.token);\n          // localStorage.setItem(\"id\", res.data.result.user.id);\n          // alert(res.data.message);\n          // window.location.href = \"/\";\n        })\n        .catch((err) => alert(err));\n    }\n  };\n\n  const alertText = {\n    color: \"red\",\n    textAlign: \"center\",\n  };\n  const inputIconSize = {\n    width: \"15px\",\n  };\n\n  const container = useRef(null)\n\n  useEffect(() => {\n    lottie.loadAnimation({\n      container: container.current,\n      renderer: 'svg',\n      loop: false,\n      autoplay: true,\n      animationData: require('./13396-storage.json')\n    })\n  }, [])\n\n  return (\n    <>\n      <div className=\"Animation\" ref={container} />\n      <div className=\"signin-form-container\">\n        <div className=\"item-right\">\n          <div\n            className=\"form-containers\"\n            data-aos=\"fade-up\"\n            data-aos-delay=\"0\"\n            data-aos-duration=\"1500\"\n            data-aos-easing=\"ease-out\"\n          >\n            <div className=\"signin-form\">\n              <h2 className=\"signin-text\">Welcome Back</h2>\n              <h6 className=\"signin-text\">\n                Login To Begin The Journey\n                      </h6>\n              <Form onSubmit={handleSubmit(onSubmit)}>\n                <Form.Group>\n                  <InputGroup size=\"sm\">\n                    <Form.Control\n                      className=\"signin-column-form\"\n                      type=\"text\"\n                      name=\"text\"\n                      onChange={(e) =>\n                        setEmail(e.target.value)\n                      }\n                      placeholder=\"Your Id\"\n                      ref={register({ required: true })}\n                    />\n                  </InputGroup>\n                  {errors.email &&\n                    errors.email.type === \"required\" && (\n                      <p style={alertText}>Nomor Pegawai required</p>\n                    )}\n                </Form.Group>\n\n                <Form.Group>\n                  <InputGroup size=\"sm\">\n                    <Form.Control\n                      className=\"signin-column-form\"\n                      type={\n                        showPassword ? \"text\" : \"password\"\n                      }\n                      name=\"password\"\n                      balue={password}\n                      onChange={(e) =>\n                        setPassword(e.target.value)\n                      }\n                      placeholder=\"Password\"\n                      ref={register({\n                        required: true,\n                        minLength: 8,\n                        maxLength: 32,\n                      })}\n                    />\n                    <i onClick={togglePasswordVisibility}>\n                      {eye}\n                    </i>{\" \"}\n                  </InputGroup>\n                  {errors.password &&\n                    errors.password.type === \"required\" && (\n                      <p style={alertText}>\n                        Password required\n                      </p>\n                    )}\n                  {errors.password &&\n                    errors.password.type === \"minLength\" && (\n                      <p style={alertText}>\n                        Password required min length of 8\n                        characters\n                      </p>\n                    )}\n                  {errors.password &&\n                    errors.password.type === \"maxLength\" && (\n                      <p style={alertText}>\n                        Password required max length of 32\n                        characters\n                      </p>\n                    )}\n                </Form.Group>\n\n                <Link to=\"/user\">\n                  <Button\n                    type=\"submit\"\n                    onClick={onSubmit}\n                    className=\"btn btn-block-signin w-100\"\n                  >\n                    Sign In\n                              </Button>\n                </Link>\n                <h6 className=\"signin-text-down\">\n                  Don't have an account? Please\n                              <Link to=\"/signup\" className=\"signup-text-link\">\n                    {\" \"}\n                                  Sign Up\n                              </Link>\n                </h6>\n              </Form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default FormSignIn;","/home/nero555/Codes/Laravel/storage_app_frontend/src/Component/Header.jsx",["43","44","45","46","47","48","49"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector, connect } from \"react-redux\";\n// import {getUserProfile} from \"../store/actions/user\"\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  NavDropdown,\n  Row,\n} from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Header.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faUserCircle,\n  faSignOutAlt,\n  faTools,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport logo from \"./asset/logo.png\";\n\n\nconst Header = (props) => {\n  const token = localStorage.getItem(\"token\");\n\n  // const dispatch = useDispatch();\n  // useEffect(() => {\n  //     dispatch(getUserProfile());\n  // }, []);\n  // const userProfile = useSelector( state => state.user)\n  // const namaUpper = userProfile.nama?.toUpperCase();\n\n  //custom style n icons\n  const textStyle = {\n    fontSize: \"15px\",\n    fontWeight: \"700\",\n    textAlign: \"center\",\n    color: \"#445e6b\",\n    margin: \"0\",\n  };\n  const signoutIcon = (\n    <FontAwesomeIcon icon={faSignOutAlt} style={{ color: \"#fde84d\" }} />\n  );\n  const settingIcon = (\n    <FontAwesomeIcon icon={faTools} style={{ color: \"#fde84d\" }} />\n  );\n  const pic = (\n    <FontAwesomeIcon\n      icon={faUserCircle}\n      size=\"2x\"\n      style={{ color: \"#fde84d\" }}\n    />\n  );\n  const signOut = () => {\n    localStorage.clear(\"token\");\n    window.location.reload();\n  };\n\n  return (\n    <header>\n      <div className=\"navbar-container w-100 shadowEffect\">\n        <div className=\"navbar\">\n          <Link\n            to={`/`}\n            data-aos=\"fade-down\"\n            data-aos-delay=\"500\"\n            data-aos-duration=\"1000\"\n            data-aos-easing=\"ease-in-out-cubic\"\n          >\n            <img\n              src={logo}\n              alt=\"docpets logo\"\n              className=\"navbar-logo\"\n            ></img>\n\n          </Link>\n          <div className=\"navbar-login-right\">\n\n            <Link to={`/signup`} className=\"navbar-text\">\n              <h3 className=\"navbar-h3\">Chat</h3>\n            </Link>\n            {token ? (\n              <NavDropdown\n                title={<>{pic} <span className=\"mx-2 my-0\" style={{ fontWeight: \"700\", color: \"#fde84d\" }}>Hi, </span></>}\n                className=\" nav-dropdown\"\n                id=\"basic-nav-dropdown\"\n              >\n                <NavDropdown.Item className=\"navItem\">\n                  <Row style={textStyle}></Row>\n                  <Row style={textStyle}></Row>\n                </NavDropdown.Item>\n                <hr />\n                <NavDropdown.Item\n                  style={textStyle}\n                  className=\"navItem\"\n                >\n                  <div>\n                    <Link\n                      to=\"/user\"\n                      style={{ color: \"#445E6B\" }}\n                    >\n                      <i style={{ color: \"#fde84d\" }}>\n                        {settingIcon}\n                      </i>{\" \"}\n                                            Profile\n                                        </Link>\n                  </div>\n                </NavDropdown.Item>\n                <NavDropdown.Item\n                  style={textStyle}\n                  className=\"navItem\"\n                >\n                  <div onClick={signOut}>\n                    <Link\n                      to=\"/\"\n                      style={{ color: \"#445E6B\" }}\n                    >\n                      <i>{signoutIcon}</i> Sign out\n                                        </Link>\n                  </div>\n                </NavDropdown.Item>\n              </NavDropdown>\n            ) : (\n              <Link to=\"/signup\">\n                <Button\n                  className=\"btn border-0 pr-3 pl-3 ml-2\"\n                  style={{\n                    backgroundColor: \"#c89f79\",\n                    color: \"white\",\n                    margin: \"1rem 1rem\",\n                    fontWeight: \"700\",\n                  }}\n                >\n                  Login\n                </Button>\n              </Link>\n            )}\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = (dispatch) => ({});\n\n// export default connect(mapStateToProps, mapDispatchToProps)(NavBarLogin);\nexport default Header",{"ruleId":"50","severity":1,"message":"51","line":6,"column":5,"nodeType":"52","messageId":"53","endLine":6,"endColumn":13},{"ruleId":"50","severity":1,"message":"54","line":3,"column":10,"nodeType":"52","messageId":"53","endLine":3,"endColumn":20},{"ruleId":"50","severity":1,"message":"55","line":7,"column":10,"nodeType":"52","messageId":"53","endLine":7,"endColumn":17},{"ruleId":"50","severity":1,"message":"56","line":8,"column":8,"nodeType":"52","messageId":"53","endLine":8,"endColumn":16},{"ruleId":"50","severity":1,"message":"57","line":9,"column":8,"nodeType":"52","messageId":"53","endLine":9,"endColumn":16},{"ruleId":"50","severity":1,"message":"58","line":20,"column":10,"nodeType":"52","messageId":"53","endLine":20,"endColumn":17},{"ruleId":"50","severity":1,"message":"59","line":20,"column":19,"nodeType":"52","messageId":"53","endLine":20,"endColumn":29},{"ruleId":"50","severity":1,"message":"60","line":22,"column":9,"nodeType":"52","messageId":"53","endLine":22,"endColumn":14},{"ruleId":"50","severity":1,"message":"61","line":23,"column":7,"nodeType":"52","messageId":"53","endLine":23,"endColumn":11},{"ruleId":"50","severity":1,"message":"62","line":57,"column":9,"nodeType":"52","messageId":"53","endLine":57,"endColumn":22},{"ruleId":"50","severity":1,"message":"63","line":1,"column":17,"nodeType":"52","messageId":"53","endLine":1,"endColumn":25},{"ruleId":"50","severity":1,"message":"64","line":1,"column":27,"nodeType":"52","messageId":"53","endLine":1,"endColumn":36},{"ruleId":"50","severity":1,"message":"65","line":2,"column":10,"nodeType":"52","messageId":"53","endLine":2,"endColumn":21},{"ruleId":"50","severity":1,"message":"66","line":2,"column":23,"nodeType":"52","messageId":"53","endLine":2,"endColumn":34},{"ruleId":"50","severity":1,"message":"55","line":2,"column":36,"nodeType":"52","messageId":"53","endLine":2,"endColumn":43},{"ruleId":"50","severity":1,"message":"67","line":145,"column":7,"nodeType":"52","messageId":"53","endLine":145,"endColumn":22},{"ruleId":"50","severity":1,"message":"68","line":147,"column":7,"nodeType":"52","messageId":"53","endLine":147,"endColumn":25},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'connect' is defined but never used.","'lockIcon' is defined but never used.","'mailIcon' is defined but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'token' is assigned a value but never used.","'role' is assigned a value but never used.","'inputIconSize' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'mapStateToProps' is assigned a value but never used.","'mapDispatchToProps' is assigned a value but never used."]